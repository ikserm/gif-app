{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","onClick","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,uBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAIlB,UACI,8CACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,mGAEsFC,UAAUH,IAFhG,SAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcXM,GAdW,4CAAH,sDCWLO,EATK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC9B,OACI,sBAAKc,UAAU,oCAAf,UACI,qBAAKA,UAAU,OAAOC,IAAKf,EAAKgB,IAAMN,IACtC,oBAAGI,UAAU,oCAAb,cAAmDJ,EAAnD,WCyBGO,EA3BC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAIf,ECLwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAK1B,CAAEpB,IAGEqB,EDjByBK,CAAc1B,GAAjCa,EAAb,EAAON,KAAca,EAArB,EAAqBA,QAGrB,OACI,qCACK,mCAAOpB,EAAP,OACAoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEenBgB,EA/Ba,WAExB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,wBAAQ4C,QAVE,WACd5C,EAAc,GAAD,mBAAK2C,GAAL,CAAgB,sBASzB,iBAEA,6BAEIA,EAAWnB,KAAK,SAACT,GAAD,OACR,cAAC,EAAD,CACIA,SAAUA,GACLA,Y,MCpBjC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.91db5517.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories(cats => [ inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add Category</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            >\r\n\r\n            </input>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n","export const getGifs = async( category ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=oz5Se2S5QWHw4Divk3M21mIpw7N1ibUZ&limit=10&q=${ encodeURI(category) }`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return (gifs);\r\n  \r\n\r\n}\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ( {id, title, url} ) => {\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn\">\r\n            <img className=\"card\" src={url} alt={ title } />\r\n            <p className=\"animate__animated animate__bounce\"> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const {data: images, loading} = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n             <h3> { category } </h3> \r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\"> \r\n                \r\n                {\r\n                    images.map( img =>(\r\n                        <GifGridItem \r\n                        key={ img.id }    \r\n                        { ...img } \r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then(imgs => {\r\n                \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n\r\n            })\r\n        \r\n    }, [ category ])\r\n\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    const handleAdd = () => {\r\n        setCategories([...categories,'Nueva categoria']);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <button onClick={handleAdd}>Add</button>\r\n\r\n            <ol>\r\n                {\r\n                categories.map( (category) => (\r\n                        <GifGrid \r\n                            category={category}\r\n                            key={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}